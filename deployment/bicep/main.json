{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "4711657909800763003"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "teamschatbot",
      "metadata": {
        "description": "Name of the application"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "S1",
        "S2",
        "P1v2",
        "P2v2"
      ],
      "metadata": {
        "description": "SKU for App Service Plan"
      }
    },
    "openAiLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure OpenAI region"
      }
    },
    "openAiSku": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": [
        "S0"
      ],
      "metadata": {
        "description": "OpenAI SKU"
      }
    },
    "gptDeploymentName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "GPT model deployment name"
      }
    },
    "gptModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "GPT model name"
      }
    },
    "gptModelVersion": {
      "type": "string",
      "defaultValue": "0613",
      "metadata": {
        "description": "GPT model version"
      }
    },
    "gptDeploymentCapacity": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "GPT deployment capacity"
      }
    },
    "enableAppInsights": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Application Insights"
      }
    },
    "enableSqlDatabase": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure SQL Database"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "chatbotadmin",
      "metadata": {
        "description": "SQL Admin username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "SQL Admin password"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[format('{0}{1}', parameters('appName'), parameters('environment'))]",
    "keyVaultName": "[format('{0}kv{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-plan', variables('resourcePrefix'))]",
    "appServiceName": "[format('{0}-app', variables('resourcePrefix'))]",
    "openAiName": "[format('{0}-openai', variables('resourcePrefix'))]",
    "botName": "[format('{0}-bot', variables('resourcePrefix'))]",
    "appInsightsName": "[format('{0}-insights', variables('resourcePrefix'))]",
    "sqlServerName": "[format('{0}-sql', variables('resourcePrefix'))]",
    "sqlDatabaseName": "[format('{0}-db', variables('resourcePrefix'))]",
    "commonTags": {
      "Application": "[parameters('appName')]",
      "Environment": "[parameters('environment')]",
      "ManagedBy": "Bicep"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('openAiName')]",
      "location": "[parameters('openAiLocation')]",
      "tags": "[variables('commonTags')]",
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[variables('openAiName')]",
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow"
        }
      },
      "sku": {
        "name": "[parameters('openAiSku')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('openAiName'), parameters('gptDeploymentName'))]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('gptModelName')]",
          "version": "[parameters('gptModelVersion')]"
        }
      },
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('gptDeploymentCapacity')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))]"
      ]
    },
    {
      "condition": "[parameters('enableAppInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "properties": {
        "reserved": true
      },
      "kind": "linux"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.11",
          "alwaysOn": "[not(equals(parameters('appServicePlanSku'), 'F1'))]",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName')), '2023-05-01').endpoint]"
            },
            {
              "name": "AZURE_OPENAI_DEPLOYMENT_NAME",
              "value": "[parameters('gptDeploymentName')]"
            },
            {
              "name": "AZURE_KEY_VAULT_URL",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "ENABLE_ORYX_BUILD",
              "value": "true"
            }
          ]
        },
        "httpsOnly": true,
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('appServiceName'), 'appsettings')]",
      "properties": {
        "AZURE_OPENAI_ENDPOINT": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName')), '2023-05-01').endpoint]",
        "AZURE_OPENAI_DEPLOYMENT_NAME": "[parameters('gptDeploymentName')]",
        "AZURE_KEY_VAULT_URL": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri]",
        "MICROSOFT_APP_ID": "[reference(resourceId('Microsoft.BotService/botServices', variables('botName')), '2022-09-15').msaAppId]",
        "SCM_DO_BUILD_DURING_DEPLOYMENT": "true",
        "ENABLE_ORYX_BUILD": "true"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "[resourceId('Microsoft.BotService/botServices', variables('botName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))]"
      ]
    },
    {
      "condition": "[and(parameters('enableSqlDatabase'), not(empty(parameters('sqlAdminPassword'))))]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2023-05-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "condition": "[and(parameters('enableSqlDatabase'), not(empty(parameters('sqlAdminPassword'))))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 5
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "condition": "[and(parameters('enableSqlDatabase'), not(empty(parameters('sqlAdminPassword'))))]",
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), 'AllowAzureServices')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2022-09-15",
      "name": "[variables('botName')]",
      "location": "global",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "F0"
      },
      "kind": "azurebot",
      "properties": {
        "displayName": "[format('{0} {1} Bot', parameters('appName'), parameters('environment'))]",
        "endpoint": "[format('https://{0}/api/messages', reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2023-01-01').defaultHostName)]",
        "msaAppId": "",
        "msaAppMSIResourceId": "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "msaAppTenantId": "[subscription().tenantId]",
        "msaAppType": "SystemAssignedMSI",
        "schemaTransformationVersion": "1.3"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.BotService/botServices/channels",
      "apiVersion": "2022-09-15",
      "name": "[format('{0}/{1}', variables('botName'), 'MsTeamsChannel')]",
      "properties": {
        "channelName": "MsTeamsChannel",
        "properties": {
          "enableCalling": false,
          "isEnabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.BotService/botServices', variables('botName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('appServiceName')), 'Key Vault Secrets User')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2023-01-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('openAiName'))]",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName')), resourceId('Microsoft.Web/sites', variables('appServiceName')), 'Cognitive Services OpenAI User')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2023-01-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]",
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName')), '2023-05-01').key1]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('appServiceName')), 'Key Vault Secrets User'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))]"
      ]
    },
    {
      "condition": "[and(parameters('enableSqlDatabase'), not(empty(parameters('sqlAdminPassword'))))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'DATABASE-URL')]",
      "properties": {
        "value": "[format('mssql+pyodbc://{0}:{1}@{2}:1433/{3}?driver=ODBC+Driver+18+for+SQL+Server', parameters('sqlAdminUsername'), parameters('sqlAdminPassword'), reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2023-05-01-preview').fullyQualifiedDomainName, variables('sqlDatabaseName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('appServiceName')), 'Key Vault Secrets User'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "condition": "[parameters('enableAppInsights')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'APPLICATIONINSIGHTS-CONNECTION-STRING')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('appServiceName')), 'Key Vault Secrets User'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2023-01-01').defaultHostName)]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "keyVaultUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri]"
    },
    "openAiEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName')), '2023-05-01').endpoint]"
    },
    "botName": {
      "type": "string",
      "value": "[variables('botName')]"
    },
    "botId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.BotService/botServices', variables('botName')), '2022-09-15').msaAppId]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[if(parameters('enableAppInsights'), reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString, '')]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[if(parameters('enableSqlDatabase'), variables('sqlServerName'), '')]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[if(parameters('enableSqlDatabase'), variables('sqlDatabaseName'), '')]"
    }
  }
}